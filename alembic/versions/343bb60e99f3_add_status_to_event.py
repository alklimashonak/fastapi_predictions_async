"""add status to event

Revision ID: 343bb60e99f3
Revises: 98a5dba60852
Create Date: 2023-06-05 18:41:09.466286

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '343bb60e99f3'
down_revision = '98a5dba60852'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    status = postgresql.ENUM('not_started', 'in_process', 'finished', name='status')
    status.create(op.get_bind())
    op.add_column('events',
                  sa.Column('status', postgresql.ENUM('not_started', 'in_process', 'finished', name='status',
                                                      create_type=False)))

    op.alter_column('events', 'start_time',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=False)
    op.alter_column('matches', 'start_time',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=False)
    op.alter_column('matches', 'event_id',
                    existing_type=sa.INTEGER(),
                    nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('matches', 'event_id',
                    existing_type=sa.INTEGER(),
                    nullable=True)
    op.alter_column('matches', 'start_time',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=True)
    op.alter_column('events', 'start_time',
                    existing_type=postgresql.TIMESTAMP(timezone=True),
                    nullable=True)
    status = postgresql.ENUM('active', 'inactive', 'archive', name='banner_status')
    status.drop(op.get_bind())
    op.drop_column('events', 'status')
    # ### end Alembic commands ###
