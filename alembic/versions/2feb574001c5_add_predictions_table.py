"""add predictions table

Revision ID: 2feb574001c5
Revises: 2c557d5aaacf
Create Date: 2023-07-03 17:25:09.277314

"""
import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2feb574001c5'
down_revision = '2c557d5aaacf'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('predictions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('team1_goals', sa.Integer(), nullable=False),
                    sa.Column('team2_goals', sa.Integer(), nullable=False),
                    sa.Column('points', sa.Integer(), nullable=True),
                    sa.Column('match_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ondelete='cascade'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='cascade'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('match_id', 'user_id', name='uix_predictions_match_id_user_id')
                    )
    op.create_index(op.f('ix_predictions_id'), 'predictions', ['id'], unique=False)
    op.alter_column('events', 'start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('matches', 'start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('matches', 'start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('events', 'start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_index(op.f('ix_predictions_id'), table_name='predictions')
    op.drop_table('predictions')
    # ### end Alembic commands ###
