"""add events and matches tables

Revision ID: 98a5dba60852
Revises: 6b2525d1f44d
Create Date: 2023-05-29 19:26:43.221183

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '98a5dba60852'
down_revision = '6b2525d1f44d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    status = postgresql.ENUM('not_started', 'in_process', 'finished', name='status')
    status.create(op.get_bind())
    op.create_table('events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=False),
                    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
                    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('matches',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('team1', sa.String(length=128), nullable=False),
                    sa.Column('team2', sa.String(length=128), nullable=False),
                    sa.Column('status', postgresql.ENUM('not_started', 'in_process', 'finished', name='status',
                                                        create_type=False), nullable=False),
                    sa.Column('team1_goals', sa.Integer(), nullable=True),
                    sa.Column('team2_goals', sa.Integer(), nullable=True),
                    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('event_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_matches_event_id_events'),
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_matches'))
                    )
    op.create_index(op.f('ix_matches_id'), 'matches', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_matches_id'), table_name='matches')
    op.drop_table('matches')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    status = postgresql.ENUM('active', 'inactive', 'archive', name='banner_status')
    status.drop(op.get_bind())
    # ### end Alembic commands ###
